.ibg {
  position: relative;
  isolation: isolate;
  overflow: hidden;
}

.ibg img {
  position: absolute;
  inset: 0;
  z-index: -2;
  inline-size: 100%;
  block-size: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}

.visually-hidden {
  position: absolute;
  inline-size: 1px;
  block-size: 1px;
  margin: -1px;
  padding: 0;
  -webkit-clip-path: inset(100%);
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
  white-space: nowrap;
  border: none;
  outline: none;
  outline-offset: 0;
}

html {
  scroll-padding-block-start: var(--header-height);
}

/*
 * Copyright (c) 2024 Javid Gulmaliyev
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * SCSS function responsive-value.
 * It is intended to handle responsive CSS property values without using media queries
 *
 * @access public
 * @author Javid Gulmaliyev
 *
 * @param {number} $start-value - The initial value of the property. Accepts only numeric values without units. Cannot be equal to $end-value.
 * @param {number} $end-value - The final value of the property. Accepts only numeric values without units. Cannot be equal to $start-value.
 * @param {number} $start-breakpoint - The initial breakpoint. At this breakpoint, the property value will be equal to $start-value. Accepts only positive numeric values without units. Cannot be less than or equal to $end-breakpoint.
 * @param {number} $end-breakpoint - The final breakpoint. At this breakpoint, the property value will be equal to $end-value. Accepts only positive numeric values or 0 (zero) without units. Cannot be greater than or equal to $start-breakpoint.
 * @param {string} $behavior - Accepts 4 values:
 *   - "not-fixed": The $start-value and $end-value properties are not fixed before and after breakpoints.
 *   - "fixed-both": The $start-value and $end-value properties are strictly fixed before and after breakpoints.
 *   - "fixed-start-value": At this value, $start-value is strictly fixed before $start-breakpoint. Default value.
 *   - "fixed-end-value": At this value, $end-value is strictly fixed after $end-breakpoint.
 * @param {string} $unit - CSS unit for numeric values. Default is "px". When changing the unit, $start-value, $end-value, $start-breakpoint, and $end-breakpoint should be written in the format of the specified unit.
 *
 * @return {string} One of the CSS mathematical functions: min(), max(), clamp().
 *
 * @example
 * .element {
 *     font-size: responsive-value(2, 1, 48, 23.4375, "fixed-both", "rem");
 *     padding: responsive-value(20, 10, 768, 375, "fixed-end-value", "px");
 *     margin-bottom: responsive-value(30, 15, 1440, 280);
 * }
 *
 * @throw {error} If $start-value, $end-value, $start-breakpoint, or $end-breakpoint are not numeric or have units.
 * @throw {error} If $start-value and $end-value are equal.
 * @throw {error} If $start-breakpoint is less than or equal to zero.
 * @throw {error} If $end-breakpoint is a negative number.
 * @throw {error} If $start-breakpoint is less than $end-breakpoint.
 * @throw {error} If $start-breakpoint is equal to $end-breakpoint.
 * @throw {error} If the value of $behavior is incorrect.
 */

body {
  font-family: var(--main-font);
  font-size: var(--font-size);
  line-height: var(--line-height);
  color: var(--text-color);
}

.scroll-lock body {
  overflow: hidden;
}

.wrapper {
  position: relative;
  display: flex;
  flex-direction: column;
  min-block-size: 100%;
  overflow: hidden;
}

.header {
  position: fixed;
  inset-block-end: 0;
  inset-inline: 0;
  z-index: 50;
  background-color: #f0f0f0;
  box-shadow: 0 0 0 0 rgba(117, 101, 125, 0.3);
  border-block-start: 0.1333333333vw solid #d2cdd4;
}

.header-nav__list {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  align-items: center;
  gap: 1.3333333333vw;
}

.header-nav__item {
  padding: 4vw;
}

.nav-link {
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 1.0666666667vw;
  font-size: 2.9333333333vw;
  line-height: 1.18;
  letter-spacing: -0.02em;
  text-align: center;
}

.nav-link__icon {
  flex: 0 0 auto;
  inline-size: 6.4vw;
  aspect-ratio: 1/1;
  font-size: 0;
}

.nav-link__icon img {
  -o-object-fit: contain;
  object-fit: contain;
}

.main {
  flex: 1 1 auto;
}

body:has(.header) .main {
  padding-block-end: var(--header-height, 19.2vw);
}

.container {
  padding-inline: 4.2666666667vw;
}

.find {
  padding-block: 6.4vw 9.3333333333vw;
}

.find__button {
  margin-block-end: 6.4vw;
}

.filter-button {
  display: flex;
  justify-content: center;
  align-items: center;
  -moz-column-gap: 3.7333333333vw;
  column-gap: 3.7333333333vw;
  inline-size: -webkit-fit-content;
  inline-size: -moz-fit-content;
  inline-size: fit-content;
  min-block-size: 6.4vw;
  margin-inline: auto;
  padding-block: 1.0666666667vw;
  padding-inline: 4.2666666667vw;
  font-weight: 500;
  color: var(--theme-color);
  background-color: var(--white-color);
  box-shadow: 0.2666666667vw 0.2666666667vw 1.3333333333vw 0 rgba(117, 101, 125, 0.15);
  border-radius: 8vw;
}

.filter-button__icon {
  flex: 0 0 auto;
  font-size: 0;
}

.filter-button__icon svg {
  width: 4.2666666667vw;
  height: 4.2666666667vw;
}

.find-form {
  position: fixed;
  inset: 0;
  z-index: 100;
  display: flex;
  flex-direction: column;
  background-color: var(--white-color);
  overflow-x: hidden;
  overflow-y: auto;
}

.find-form:not(.find-form--show) {
  visibility: hidden;
}

body:has(.find-form--show) {
  overflow: hidden;
}

.find-form__header {
  position: -webkit-sticky;
  position: sticky;
  inset-block-start: 0;
  z-index: 1;
  display: grid;
  grid-template-columns: 22.4vw 1fr 22.4vw;
  align-items: center;
  gap: 4.2666666667vw;
  min-block-size: 14.4vw;
  margin-block-end: 1.8666666667vw;
  padding-inline: 4.2666666667vw;
  background-color: var(--white-color);
}

.find-form__header::before {
  content: "";
}

.find-form__title {
  font-size: 4.8vw;
  line-height: 1.2;
  text-align: center;
}

.find-form__reset {
  display: flex;
  justify-content: center;
  align-items: center;
  min-block-size: 6.4vw;
  padding-block: 1.3333333333vw;
  padding-inline: 4.2666666667vw;
  font-weight: 500;
  color: var(--theme-color);
  background-color: var(--white-color);
  box-shadow: 0.2666666667vw 0.2666666667vw 1.3333333333vw 0 rgba(117, 101, 125, 0.15);
  border-radius: 8vw;
}

.find-form__inner {
  flex: 1 1 auto;
}

.find-form__fieldset:not(:last-child) {
  margin-block-end: 12.8vw;
}

.find-form__label {
  margin-block-end: 4.2666666667vw;
  padding-inline: 4.2666666667vw;
  font-weight: 600;
  font-size: 3.7333333333vw;
  line-height: 1.2;
}

.find-form__row {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  row-gap: 3.2vw;
  -moz-column-gap: 6.4vw;
  column-gap: 6.4vw;
  padding-inline: 4.2666666667vw;
}

.find-form__bottom {
  position: -webkit-sticky;
  position: sticky;
  inset-block-end: 0;
  z-index: 1;
  padding-block: 4.2666666667vw 12.8vw;
  padding-inline: 4.2666666667vw;
  background-color: var(--white-color);
}

.find-form__submit {
  display: flex;
  justify-content: center;
  align-items: center;
  inline-size: 100%;
  min-block-size: 11.2vw;
  padding: 3.4666666667vw;
  font-weight: 500;
  font-size: 3.7333333333vw;
  color: var(--theme-color);
  background-color: var(--white-color);
  box-shadow: 0.2666666667vw 0.2666666667vw 2.6666666667vw 0 rgba(117, 101, 125, 0.15);
  border-radius: 8vw;
}

.find-form__list .find-checkbox {
  display: flex;
  align-items: center;
  min-block-size: 14.9333333333vw;
  padding-inline: 4.2666666667vw;
}

.find-form__list .find-checkbox:not(:last-child) {
  border-block-end: 0.1333333333vw solid rgba(117, 101, 125, 0.2);
}

.find-form__list .find-checkbox:first-child,
.find-form__list .find-checkbox:last-child {
  min-block-size: 10.6666666667vw;
}

.find-form__list .find-checkbox:first-child {
  align-items: start;
}

.find-form__list .find-checkbox:last-child {
  align-items: end;
}

.find-checkbox__label {
  display: flex;
  align-items: center;
  -moz-column-gap: 2.1333333333vw;
  column-gap: 2.1333333333vw;
  font-weight: 500;
}

.find-checkbox__icon {
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 auto;
  inline-size: 6.4vw;
  aspect-ratio: 1/1;
  font-size: 0;
  color: rgba(255, 255, 255, 0);
  border: 0.2666666667vw solid rgba(117, 101, 125, 0.2);
  border-radius: 0.5333333333vw;
}

.find-checkbox:has(.find-checkbox__input:checked) .find-checkbox__icon {
  color: var(--white-color);
  background-color: var(--theme-color);
  border-color: var(--theme-color);
}

.find-checkbox__icon svg {
  width: 4vw;
  height: 3.2vw;
}

.find-list__item:not(:last-child) {
  margin-block-end: 2.1333333333vw;
}

.find-card {
  block-size: 100%;
}

.find-card__top {
  position: relative;
  isolation: isolate;
  aspect-ratio: 343/358;
  border-start-start-radius: 5.3333333333vw;
  border-start-end-radius: 5.3333333333vw;
  overflow: hidden;
}

.find-card__top::after {
  content: "";
  position: absolute;
  inset: 0;
  z-index: -1;
  background: linear-gradient(180deg, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.4) 72%);
}

.find-card__buttons {
  position: absolute;
  inset-block-start: 2.6666666667vw;
  inset-inline: 4.2666666667vw 2.6666666667vw;
  z-index: 1;
  display: flex;
  justify-content: space-between;
  align-items: center;
  -moz-column-gap: 4.2666666667vw;
  column-gap: 4.2666666667vw;
}

.find-card__remove {
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 auto;
  inline-size: 11.2vw;
  aspect-ratio: 1/1;
  font-size: 0;
  color: var(--theme-color);
  background-color: var(--white-color);
  box-shadow: 0.2666666667vw 0.2666666667vw 1.3333333333vw 0 rgba(117, 101, 125, 0.15);
  border-radius: 50%;
}

.find-card__remove svg {
  width: 4.2666666667vw;
  height: 4.2666666667vw;
}

.find-card__image {
  position: absolute;
  inset: 0;
  z-index: -2;
  font-size: 0;
}

.find-card__content {
  position: relative;
  margin-block-start: -4.2666666667vw;
  padding-block: 2.6666666667vw 4.2666666667vw;
  padding-inline: 4.2666666667vw 2.6666666667vw;
  background-color: var(--white-color);
  border: 0.1333333333vw solid rgba(117, 101, 125, 0.2);
  border-radius: 5.3333333333vw;
}

.find-card__header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  -moz-column-gap: 4.2666666667vw;
  column-gap: 4.2666666667vw;
  margin-block-end: 4.2666666667vw;
}

.find-card__name {
  font-weight: 500;
  font-size: 4.2666666667vw;
  line-height: 1;
}

.find-card__target {
  margin-block-start: 1.6vw;
  color: var(--theme-color);
}

.find-card__like {
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 auto;
  inline-size: 11.2vw;
  aspect-ratio: 1/1;
  font-size: 0;
  color: var(--theme-color);
  border: 0.2666666667vw solid;
  border-radius: 50%;
}

.find-card__like svg {
  width: 4.5333333333vw;
  height: 4.5333333333vw;
}

.find-card__compatilibity {
  margin-block-end: 4.2666666667vw;
}

.find-location {
  display: flex;
  align-items: center;
  -moz-column-gap: 1.6vw;
  column-gap: 1.6vw;
  min-block-size: 6.4vw;
  padding-block: 1.0666666667vw;
  padding-inline: 4.2666666667vw;
  color: var(--white-color);
  border: 0.1333333333vw solid;
  border-radius: 5.3333333333vw;
}

.find-location__icon {
  flex: 0 0 auto;
  font-size: 0;
}

.find-location__icon svg {
  width: 3.2vw;
  height: 4.2666666667vw;
}

.find-compatilibity {
  display: flex;
  justify-content: space-between;
  align-items: center;
  -moz-column-gap: 5.6vw;
  column-gap: 5.6vw;
}

.find-compatilibity__progress {
  position: relative;
  flex: 1 1 auto;
  max-inline-size: 47.7333333333vw;
  aspect-ratio: 179/10;
  font-size: 0;
  background-color: #f9f9f9;
  border-radius: 2.6666666667vw;
  overflow: hidden;
}

.find-compatilibity__progress::after {
  content: "";
  position: absolute;
  inset-block: 0;
  inset-inline-start: 0;
  inline-size: var(--progress);
  block-size: 100%;
  background: #ace39c;
  border-radius: inherit;
}

.find-compatilibity__text {
  font-weight: 500;
  text-align: end;
}

.find-links__block:not(:last-child) {
  margin-block-end: 3.2vw;
}

.find-links__title {
  margin-block-end: 1.6vw;
  font-weight: 600;
  font-size: 3.2vw;
  line-height: 1.2;
}

.find-links__list {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 1.0666666667vw;
}

.find-links__link {
  display: flex;
  justify-content: center;
  align-items: center;
  min-block-size: 5.6vw;
  padding-block: 1.3333333333vw;
  padding-inline: 2.6666666667vw;
  font-weight: 500;
  font-size: 2.6666666667vw;
  border: 0.2666666667vw solid rgba(117, 101, 125, 0.2);
  border-radius: 5.3333333333vw;
}